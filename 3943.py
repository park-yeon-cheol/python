# #문제
# 헤일스톤 수열은 다음과 같이 정의 한다.

# n이 짝수라면, 2로 나눈다.
# n이 홀수라면, 3을 곱한 뒤 1을 더한다.
# 헤일스톤 추측은 임의의 양의 정수 n으로 수열을 시작한다면, 항상 4, 2, 1, 4, 2, 1,...로 끝난다는 추측이다. 이 문제에서는 1이 나오면 수열이 끝난 것으로 처리한다.

# n이 주어졌을 때, 이 수열에서 가장 큰 값을 찾아 출력하는 프로그램을 작성하시오.

import sys
t=int(sys.stdin.readline())
for _ in range(t):
    n = int(sys.stdin.readline())
    arr = []
    arr.append(n)
    while n != 1:
        if n % 2 == 0:
            n = n // 2
            arr.append(n)
        else:
            n = n * 3 + 1
            arr.append(n)
    print(max(arr))

#문제에서 주어진 대로 짝수라면 2로 나누고, 홀수라면 3을 곱하고 1을 더하는 과정을 n이 1일 때까지 반복해 주고, 리스트 arr에다가 추가해 주었다.
#마지막에 max()함수를 사용해서 쉽게 가장 큰 값을 출력하였다.

